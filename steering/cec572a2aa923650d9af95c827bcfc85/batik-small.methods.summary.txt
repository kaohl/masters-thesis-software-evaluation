sun.java2d.marlin.Renderer._endRendering(int, int),80
org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam.filterRow(byte[], byte[], byte[][], int, int),36
org.apache.batik.ext.awt.image.codec.png.PNGImageEncoder.encodePass(OutputStream, Raster, int, int, int, int),11
java.util.concurrent.ConcurrentHashMap.transfer(ConcurrentHashMap$Node[], ConcurrentHashMap$Node[]),9
java.awt.image.SinglePixelPackedSampleModel.getPixels(int, int, int, int, int[], DataBuffer),7
java.util.Properties.load0(Properties$LineReader),6
java.util.Properties$LineReader.readLine(),6
org.apache.batik.ext.awt.image.codec.png.CRC.updateCRC(int, byte[], int, int),5
sun.java2d.marlin.MarlinTileGenerator.getAlphaNoRLE(byte[], int, int),5
org.apache.batik.bridge.DefaultFontFamilyResolver.<clinit>(),4
com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanLiteral(int, XMLString, boolean),4
org.apache.batik.dom.util.SAXDocumentFactory.startElement(String, String, String, Attributes),4
java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(MemberName),4
org.apache.batik.ext.awt.image.GraphicsUtil.copyData_INT_PACK(Raster, WritableRaster),3
sun.java2d.marlin.Renderer.addLine(double, double, double, double),3
sun.java2d.marlin.MarlinCache.copyAARowNoRLE(int[], int, int, int),3
org.apache.batik.gvt.font.AWTGVTGlyphVector.computeGlyphLogicalBounds(),3
sun.java2d.marlin.Stroker.closePath(),3
java.io.FileDescriptor.closeAll(Closeable),3
java.util.Locale.equals(Object),3
sun.font.TrueTypeFont.getTableBuffer(int),3
org.apache.batik.parser.AbstractParser.<init>(),3
org.apache.batik.bridge.GVTBuilder.buildComposite(BridgeContext, Element, CompositeGraphicsNode),3
org.apache.batik.css.engine.CSSEngine.getCascadedStyleMap(CSSStylableElement, String),3
sun.java2d.marlin.MergeSort.mergeSort(int[], int[], int[], int[], int[], int[], int, int),2
jdk.internal.misc.Unsafe.getByte(long),2
sun.java2d.marlin.Renderer.endRendering(),2
sun.java2d.pipe.AAShapePipe.renderTiles(SunGraphics2D, Shape, AATileGenerator, int[], AAShapePipe$TileState),2
java.awt.geom.Path2D$Double.getBounds2D(),2
sun.font.AttributeValues.merge(Map, int),2
sun.font.TrueTypeFont.init(int),2
java.nio.ByteBufferAsIntBufferB.get(),2
sun.font.TrueTypeFont.getDirectoryEntry(int),2
java.util.concurrent.ConcurrentHashMap.get(Object),2
java.lang.invoke.LambdaFormBuffer.growNames(int, int),2
org.apache.batik.css.engine.value.AbstractValueManager.computeValue(CSSStylableElement, String, CSSEngine, int, StyleMap, Value),2
org.apache.batik.css.engine.sac.CSSClassCondition.match(Element, String),2
org.apache.batik.dom.xbl.GenericXBLManager.getXblParentNode(Node),2
java.awt.Color.testColorValueRange(int, int, int, int),2
org.apache.batik.css.engine.CSSEngine.addMatchingRules(List, StyleSheet, Element, String),2
org.apache.batik.bridge.AbstractGraphicsNodeBridge.buildGraphicsNode(BridgeContext, Element, GraphicsNode),2
org.apache.batik.css.engine.sac.CSSElementSelector.match(Element, String),2
org.apache.batik.dom.AbstractElement.setAttributeNS(String, String, String),2
com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanQName(QName, XMLScanner$NameType),2
org.apache.batik.anim.dom.AbstractElement.getLiveAttributeValue(Attr),2
org.apache.batik.dom.AbstractElement$NamedNodeHashMap.put(String, String, Node),2
com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.emptyElement(QName, XMLAttributes, Augmentations),2
com.sun.org.apache.xerces.internal.util.NamespaceSupport.getDeclaredPrefixCount(),2
org.apache.batik.dom.AbstractElement.invalidateElementsByTagName(Node),2
com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanChar(XMLScanner$NameType),2
com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.normalizeNewlines(short, XMLString, boolean, boolean, XMLScanner$NameType),2
java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int),2
java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(LambdaForm$BasicType, Class, Object),2
jdk.internal.org.objectweb.asm.MethodWriter.putMethodInfo(ByteVector),2
java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$NamedFunction, Object[]),2
java.util.zip.ZipFile$Source.getEntryPos(String, boolean),2
java.lang.invoke.LambdaForm$NamedFunction.intrinsicName(),1
java.lang.constant.ConstantDescs.<clinit>(),1
sun.security.util.KnownOIDs.register(KnownOIDs),1
java.io.UnixFileSystem.normalize(String),1
org.apache.batik.bridge.AbstractGraphicsNodeBridge.dispose(),1
org.apache.batik.css.engine.CSSEngine.disposeStyleMaps(Node),1
java.io.FilterOutputStream.close(),1
org.apache.batik.ext.awt.image.codec.png.CRC.<clinit>(),1
sun.java2d.marlin.MergeSort.mergeSortNoCopy(int[], int[], int[], int[], int, int),1
sun.java2d.marlin.FloatMath.ceil_int(double),1
sun.java2d.marlin.FloatMath.min(int, int),1
sun.java2d.marlin.Stroker.within(double, double, double, double, double),1
sun.java2d.marlin.Stroker._curveTo(double, double, double, double, double, double, int),1
org.apache.batik.gvt.StrokeShapePainter.paint(Graphics2D),1
sun.java2d.marlin.Renderer.copyAARow(int[], int, int, int, boolean),1
sun.java2d.marlin.Renderer.lineTo(double, double),1
sun.java2d.marlin.Stroker.emitReverse(),1
sun.java2d.marlin.Stroker.drawMiter(double, double, double, double, double, double, double, double, double, double, boolean),1
sun.java2d.pipe.AAShapePipe$TileState.getAlphaTile(int),1
sun.java2d.loops.RenderCache$Entry.matches(SurfaceType, CompositeType, SurfaceType),1
sun.java2d.marlin.MarlinTileGenerator.getAlphaRLE(byte[], int, int),1
sun.java2d.marlin.DMarlinRenderingEngine.getAATileGenerator(Shape, AffineTransform, Region, BasicStroke, boolean, boolean, int[]),1
java.awt.RenderingHints.putAll(Map),1
sun.java2d.SunGraphics2D.addRenderingHints(Map),1
sun.java2d.marlin.FloatMath.max(int, int),1
sun.java2d.marlin.Renderer.endRendering(int),1
jdk.internal.misc.Unsafe.putInt(long, int),1
sun.java2d.SunGraphics2D.setRenderingHints(Map),1
sun.java2d.loops.GraphicsPrimitiveMgr$1.compare(Object, Object),1
sun.java2d.loops.GraphicsPrimitive.<init>(long, String, int, SurfaceType, CompositeType, SurfaceType),1
java.util.concurrent.ConcurrentHashMap.isEmpty(),1
sun.java2d.marlin.DMarlinRenderingEngine$NormMode$3.getNormalizingPathIterator(RendererContext, PathIterator),1
java.util.HashMap$HashIterator.nextNode(),1
java.util.HashMap.getNode(Object),1
sun.font.AttributeValues.equals(AttributeValues),1
org.apache.batik.gvt.font.AWTGVTFont.canDisplayUpTo(CharacterIterator, int, int),1
org.apache.batik.bridge.GlyphLayout.getDecorationOutline(int),1
sun.font.StandardGlyphVector.initFontData(),1
java.text.AttributedCharacterIterator$Attribute.hashCode(),1
java.awt.geom.RectangularShape.getMinY(),1
java.awt.Font.getLineMetrics(String, FontRenderContext),1
jdk.internal.icu.text.BidiBase.getCustomizedClass(int),1
sun.font.GlyphLayout.layout(Font, FontRenderContext, char[], int, int, int, StandardGlyphVector),1
org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry.<init>(AWTGlyphGeometryCache, int, char, AWTGlyphGeometryCache$Value, AWTGlyphGeometryCache$Entry),1
jdk.jfr.internal.handlers.EventHandler.timestamp(),1
java.util.Vector.get(int),1
org.apache.batik.gvt.font.AWTGVTGlyphVector.getGlyphTransform(int),1
org.apache.batik.bridge.GlyphLayout.getOverlineShape(),1
sun.font.EAttribute.forAttribute(AttributedCharacterIterator$Attribute),1
org.apache.batik.bridge.GlyphLayout.epsEQ(double, double),1
sun.java2d.marlin.TransformingPathConsumer2D$Path2DWrapper.lineTo(double, double),1
java.awt.font.StyledParagraph.addFonts(char[], Map, int, int),1
java.awt.geom.Rectangle2D$Float.getHeight(),1
sun.java2d.marlin.Stroker.finish(int),1
jdk.internal.icu.impl.Trie2.createFromSerialized(ByteBuffer),1
java.nio.HeapByteBuffer.getChar(),1
sun.font.AttributeValues.update(EAttribute),1
java.awt.geom.RectangularShape.getMaxY(),1
sun.java2d.marlin.ByteArrayCache$Reference.putArray(byte[]),1
sun.java2d.marlin.Helpers.subdivideCubicAt(double, double[], int, double[], int, int),1
java.awt.geom.Rectangle2D.add(Rectangle2D),1
java.lang.Math.max(double, double),1
java.lang.Math.powerOfTwoD(int),1
sun.java2d.marlin.ByteArrayCache$Reference.putArray(byte[], int, int),1
sun.java2d.marlin.Helpers.cubicRootsInAB(double, double, double, double, double[], int, double, double),1
sun.java2d.marlin.Helpers.findSubdivPoints(Curve, double[], double[], int, double),1
sun.java2d.marlin.DMarlinRenderingEngine.pathToLoop(double[], PathIterator, DPathConsumer2D),1
sun.java2d.marlin.Helpers$PolyStack.popAll(DPathConsumer2D),1
sun.java2d.marlin.Curve.falsePositionROCsqMinusX(double, double, double, double),1
sun.java2d.marlin.Stroker.drawJoin(double, double, double, double, double, double, double, double, double, double, int),1
sun.java2d.marlin.Stroker.emitLineToRev(double, double),1
java.lang.invoke.DelegatingMethodHandle.chooseDelegatingForm(MethodHandle),1
java.awt.geom.RectangularShape.<init>(),1
org.apache.batik.gvt.CompositeGraphicsNode.setRoot(RootGraphicsNode),1
java.util.Vector.indexOf(Object, int),1
org.apache.batik.dom.AbstractElement$NamedNodeHashMap.hashCode(String, String),1
org.apache.batik.bridge.SVGTextElementBridge.fillAttributedStringBuffer(BridgeContext, Element, boolean, TextPath, Integer, Map, SVGTextElementBridge$AttributedStringBuffer),1
java.text.AttributedString.getIterator(AttributedCharacterIterator$Attribute[], int, int),1
java.util.TreeMap.rotateLeft(TreeMap$Entry),1
java.util.TreeMap.getEntry(Object),1
java.lang.StringLatin1.getChar(byte[], int),1
java.nio.Buffer.nextGetIndex(),1
sun.nio.ch.FileChannelImpl.size(),1
sun.font.TrueTypeFont$TTDisposerRecord.dispose(),1
java.nio.ShortBuffer.limit(int),1
java.nio.HeapByteBuffer.byteOffset(long),1
sun.font.SunFontManager.addToFontList(PhysicalFont, int),1
sun.awt.SunToolkit.getStartupLocale(),1
java.util.Hashtable.put(Object, Object),1
sun.nio.ch.FileChannelImpl.beginBlocking(),1
java.io.FileDescriptor.close(),1
sun.font.TrueTypeFont.open(boolean),1
java.lang.Thread.blockedOn(Interruptible),1
java.lang.StringLatin1.toLowerCase(String, byte[], Locale),1
java.nio.HeapByteBuffer.<init>(int, int, MemorySegmentProxy),1
sun.font.TrueTypeFont.<init>(String, Object, int, boolean, boolean),1
sun.font.TrueTypeFont.setStyle(ByteBuffer),1
sun.nio.ch.NativeThreadSet.remove(int),1
jdk.internal.misc.ScopedMemoryAccess.getIntUnalignedInternal(ScopedMemoryAccess$Scope, Object, long, boolean),1
sun.java2d.Disposer.addObjectRecord(Object, DisposerRecord),1
java.security.AccessController.doPrivileged(PrivilegedExceptionAction),1
java.nio.HeapByteBuffer.getInt(int),1
sun.font.FileFont.<init>(String, Object),1
java.io.FileDescriptor.unregisterCleanup(),1
sun.font.TrueTypeFont.initNames(),1
sun.nio.cs.UnicodeDecoder.decodeLoop(ByteBuffer, CharBuffer),1
java.util.concurrent.ConcurrentHashMap.replaceNode(Object, Object, Object),1
java.nio.ByteBufferAsShortBufferB.get(),1
jdk.internal.misc.ScopedMemoryAccess.getShortUnalignedInternal(ScopedMemoryAccess$Scope, Object, long, boolean),1
sun.font.PhysicalFont.<init>(String, Object),1
sun.font.TrueTypeFont.close(),1
java.nio.CharBuffer.limit(int),1
java.lang.String.<init>(byte[], int, int, Charset),1
sun.nio.ch.FileChannelImpl.read(ByteBuffer),1
sun.font.FontUtilities.isLogging(),1
sun.font.TrueTypeFont.setCJKSupport(ByteBuffer),1
java.nio.charset.CharsetDecoder.flush(CharBuffer),1
java.lang.ThreadLocal.get(),1
jdk.internal.misc.ScopedMemoryAccess.copyMemory(ScopedMemoryAccess$Scope, ScopedMemoryAccess$Scope, Object, long, Object, long, long),1
java.nio.HeapCharBuffer.ix(int),1
java.lang.String.equals(Object),1
java.lang.ProcessEnvironment.arrayHash(byte[]),1
sun.font.FcFontConfiguration.get2DCompositeFontInfo(),1
java.lang.invoke.StringConcatFactory.parseRecipe(MethodType, String, Object[]),1
jdk.internal.org.objectweb.asm.FieldWriter.<init>(SymbolTable, int, String, String, String, Object),1
java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls(),1
java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(byte, Class, MemberName, boolean, boolean, MethodHandles$Lookup),1
jdk.internal.org.objectweb.asm.ClassWriter.visitField(int, String, String, String, Object),1
java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object),1
java.net.InetAddress$CachedAddresses.<clinit>(),1
sun.awt.FontConfiguration.findImpl(String),1
jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int),1
sun.net.www.protocol.jar.Handler.checkNestedProtocol(String),1
org.apache.batik.bridge.PaintServer.convertFillPaint(Element, GraphicsNode, BridgeContext),1
java.util.HashMap.<init>(int, float),1
org.apache.batik.bridge.PaintServer.convertStrokePaint(Element, GraphicsNode, BridgeContext),1
org.apache.batik.bridge.CSSUtilities.convertColorRendering(Element, RenderingHints),1
org.apache.batik.gvt.CompositeGraphicsNode.ensureCapacity(int),1
org.apache.batik.anim.dom.SVGOMAnimatedPathData.check(),1
org.apache.batik.gvt.AbstractGraphicsNode.fireGraphicsNodeChangeCompleted(),1
org.apache.batik.css.engine.CSSEngine.getCSSParentNode(Node),1
org.apache.batik.bridge.AbstractGraphicsNodeBridge.computeTransform(SVGTransformable, BridgeContext),1
org.apache.batik.bridge.CSSUtilities.convertOpacity(Element),1
org.apache.batik.css.engine.sac.CSSConditionalSelector.getSpecificity(),1
org.apache.batik.css.dom.CSSOMStyleDeclaration.<init>(CSSOMStyleDeclaration$ValueProvider, CSSRule),1
org.apache.batik.dom.svg.SVGPathSegItem.<init>(short, String),1
org.apache.batik.dom.svg.SVGPathSegItem.setY1(float),1
org.apache.batik.dom.AbstractNode.getXblParentNode(),1
org.apache.batik.dom.AbstractElement$NamedNodeHashMap.get(String, String),1
org.apache.batik.dom.svg.AbstractSVGList.getItemImpl(int),1
org.apache.batik.bridge.CSSUtilities.convertFilter(Element, GraphicsNode, BridgeContext),1
org.apache.batik.anim.dom.SVGOMElement.getNodeName(),1
org.apache.batik.bridge.PaintServer.convertColor(Value, float),1
java.lang.String.isLatin1(),1
java.awt.geom.Path2D.closePath(),1
org.apache.batik.ext.awt.geom.ExtendedGeneralPath.makeRoom(int),1
org.apache.batik.css.engine.CSSEngine.getComputedStyle(CSSStylableElement, String, int),1
java.lang.StringLatin1.indexOf(byte[], byte[]),1
org.apache.batik.css.engine.CSSEngine.addRules(Element, String, StyleMap, ArrayList, short),1
org.apache.batik.bridge.PaintServer.convertFillAndStroke(Element, ShapeNode, BridgeContext),1
org.apache.batik.parser.PathParser.doParse(),1
org.apache.batik.css.engine.value.svg.SVGPaintManager.computeValue(CSSStylableElement, String, CSSEngine, int, StyleMap, Value),1
org.apache.batik.ext.awt.geom.ExtendedGeneralPath.closePath(),1
org.apache.batik.bridge.PaintServer.convertStrokeDasharray(Value),1
org.apache.batik.ext.awt.geom.ExtendedGeneralPath.checkMoveTo(),1
org.apache.batik.bridge.CSSUtilities.convertShapeRendering(Element, RenderingHints),1
org.apache.batik.css.engine.sac.CSSConditionalSelector.match(Element, String),1
java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List),1
java.lang.String.startsWith(String),1
org.apache.batik.ext.awt.image.renderable.ClipRable8Bit.<init>(Filter, Shape),1
java.io.BufferedReader.read(),1
org.apache.batik.util.io.ISO_8859_1Decoder.readChar(),1
java.lang.StringLatin1.lastIndexOf(byte[], int, int),1
jdk.internal.access.SharedSecrets.javaUtilJarAccess(),1
org.apache.batik.css.engine.value.svg.ColorManager.<clinit>(),1
jdk.internal.logger.BootstrapLogger.useLazyLoggers(),1
org.apache.batik.script.InterpreterPool.<clinit>(),1
org.apache.batik.anim.dom.SVGOMDocument.getRootElement(),1
com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.characters(XMLString, Augmentations),1
com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(),1
java.util.jar.Manifest.getTrustedAttributes(String),1
org.apache.batik.anim.dom.AbstractElement.getLiveAttributeValue(String, String),1
org.apache.batik.anim.dom.SVGOMElement.createLiveAnimatedString(String, String),1
com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(QName, XMLAttributes, Augmentations),1
com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar.getElementDeclIndex(String),1
java.lang.String.length(),1
com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(boolean),1
org.apache.batik.dom.AbstractAttr.<init>(String, AbstractDocument),1
com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getLength(),1
com.sun.org.apache.xerces.internal.util.XMLChar.isNameStart(int),1
com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getIndexFast(String),1
com.sun.org.apache.xerces.internal.util.XMLChar.isSpace(int),1
com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.addDTDDefaultAttrsAndValidate(QName, int, XMLAttributes),1
com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endNamespaceMapping(),1
com.sun.org.apache.xerces.internal.util.XMLChar.isContent(int),1
com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleEndElement(QName, Augmentations, boolean),1
com.sun.org.apache.xerces.internal.impl.dtd.XMLNSDTDValidator.startNamespaceScope(QName, XMLAttributes, Augmentations),1
org.apache.batik.anim.dom.SVGOMElement.fireBaseAttributeListeners(String, String),1
org.apache.batik.dom.AbstractElement$NamedNodeHashMap.setNamedItem(String, String, Node),1
java.util.AbstractSequentialList.iterator(),1
com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(),1
java.util.HashMap.get(Object),1
com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(QName, XMLAttributes, Augmentations),1
org.apache.batik.dom.AbstractParentChildNode.setParentNode(Node),1
com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanContent(XMLString),1
com.sun.org.apache.xerces.internal.util.SymbolTable.addSymbol(char[], int, int),1
com.sun.org.apache.xerces.internal.util.SymbolTable.hash(char[], int, int),1
java.lang.String.indexOf(byte[], byte, int, String, int),1
org.apache.batik.anim.dom.SVGGraphicsElement.<clinit>(),1
com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getQName(int),1
java.util.jar.JarFile.ensureInitialization(),1
java.lang.StringConcatHelper.newArray(long),1
java.io.FilterInputStream.<init>(InputStream),1
jdk.internal.loader.BuiltinClassLoader.isSealed(String, Manifest),1
com.sun.org.apache.xerces.internal.util.XMLChar.isValid(int),1
java.lang.StringLatin1.inflate(byte[], int, char[], int, int),1
java.lang.String.startsWith(String, int),1
java.util.Arrays.fill(byte[], int, int, byte),1
jdk.internal.loader.BuiltinClassLoader.findResources(String),1
java.util.jar.JarFile$JarFileEntry.<init>(JarFile, String),1
java.util.ArrayList.indexOfRange(Object, int, int),1
com.sun.org.apache.xerces.internal.impl.XMLScanner.<init>(),1
java.lang.invoke.MemberName.checkForTypeAlias(Class),1
java.lang.invoke.BoundMethodHandle$SpeciesData.deriveClassName(),1
java.lang.invoke.LambdaFormEditor.filterArgumentsForm(int, MethodType, int[]),1
java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes(),1
java.util.HashMap.resize(),1
java.util.ArrayDeque.pollFirst(),1
java.lang.Character.toLowerCase(int),1
java.io.BufferedReader.readLine(boolean, boolean[]),1
java.util.zip.ZipFile.getZipEntry(String, int),1
java.lang.AbstractStringBuilder.ensureCapacityInternal(int),1
java.lang.ClassLoader.definePackage(String, String, String, String, String, String, String, URL),1
java.security.SecureClassLoader.defineClass(String, byte[], int, int, CodeSource),1
java.util.zip.Inflater.getBytesWritten(),1
jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(Label),1
java.lang.invoke.MethodHandles.filterRepeatedArgument(MethodHandle, MethodHandle, int[]),1
java.nio.HeapByteBuffer.ix(int),1
java.lang.ClassLoader.defineClassSourceLocation(ProtectionDomain),1
java.lang.ClassLoader.checkCerts(String, CodeSource),1
jdk.internal.jimage.ImageLocation.verify(String, String, ByteBuffer, int, ImageStrings),1
jdk.internal.jimage.BasicImageReader.slice(ByteBuffer, int, int),1
java.lang.StringLatin1.charAt(byte[], int),1
sun.net.www.protocol.jrt.JavaRuntimeURLConnection.findResource(String, String),1
java.lang.String.getBytes(byte[], int, int, byte, int),1
java.lang.String.newStringUTF8NoRepl(byte[], int, int),1
java.util.jar.JarFile.initializeVerifier(),1
