org.jacop.constraints.netflow.simplex.NetworkSimplex.dualPivot(Arc),397
org.jacop.constraints.netflow.simplex.Arc.isInCut(boolean),197
org.jacop.constraints.netflow.Network.modified(ArcCompanion),192
org.jacop.constraints.netflow.simplex.Node.computePotentials(),186
org.jacop.constraints.netflow.simplex.Arc.tail(),146
org.jacop.constraints.netflow.simplex.Arc.reducedCost(),141
org.jacop.constraints.netflow.simplex.NetworkSimplex.augmentFlow(Node, Node, int),111
org.jacop.constraints.netflow.simplex.NetworkSimplex.decrementDegree(Node),102
org.jacop.constraints.netflow.simplex.NetworkSimplex.updateTree(Arc, Arc),97
org.jacop.constraints.netflow.simplex.Danzig.next(),96
org.jacop.constraints.netflow.simplex.NetworkSimplex.removeArc(Arc),80
org.jacop.constraints.netflow.simplex.Node.markTree(boolean),75
org.jacop.constraints.netflow.simplex.Arc.longCost(),73
org.jacop.constraints.netflow.simplex.NetworkSimplex.cost(long),72
org.jacop.constraints.netflow.simplex.Node.predecessorOnThread(),59
java.util.LinkedHashMap$LinkedHashIterator.nextNode(),46
org.jacop.constraints.netflow.Pruning.analyzeArc(Arc, int),45
org.jacop.core.Store.recordBooleanChange(BooleanVar),39
java.util.PriorityQueue.siftDownComparable(int, Object, Object[], int),39
org.jacop.constraints.netflow.simplex.Node.rightMostLeaf(),37
org.jacop.constraints.netflow.simplex.NetworkSimplex.treeSwap(Node, Node, Node),36
org.jacop.constraints.netflow.simplex.Node.lca(Node),36
org.jacop.constraints.netflow.simplex.Arc.addFlow(int),32
java.util.HashMap$HashIterator.nextNode(),30
org.jacop.core.Store.addChanged(Var, int, int),30
org.jacop.constraints.netflow.simplex.NetworkSimplex.networkSimplex(int),30
org.jacop.constraints.netflow.ArcCompanion.compareTo(ArcCompanion),30
org.jacop.constraints.binpacking.Binpacking.consistency(Store),29
org.jacop.constraints.Sum.consistency(Store),27
org.jacop.core.Store.removeLevel(int),27
java.util.ArrayList$Itr.next(),25
org.jacop.constraints.netflow.ArcCompanion.compareTo(Object),22
org.jacop.core.SmallDenseDomain.in(int, Var, int, int),20
org.jacop.constraints.netflow.Pruning.analyze(int),20
java.util.HashMap.putVal(int, Object, Object, boolean, boolean),20
org.jacop.constraints.binpacking.Binpacking.lbBins(int[], int, int),18
java.util.PriorityQueue.poll(),18
org.jacop.core.IntVar.min(),16
java.util.HashMap$HashIterator.<init>(HashMap),15
java.util.HashSet.iterator(),14
org.jacop.core.Store.consistency(),14
org.jacop.core.SmallDenseDomain.previousValue(int),13
java.util.PriorityQueue.siftUpComparable(int, Object, Object[]),13
java.util.HashMap.clear(),13
org.jacop.constraints.netflow.Pruning$PercentStrategy.next(),13
org.jacop.constraints.netflow.Network.remove(Arc),12
org.jacop.constraints.netflow.NetworkFlow.updateGraph(),11
org.jacop.core.IntervalDomain.<init>(int),11
org.jacop.core.IntervalDomain.min(),11
java.util.HashMap.getNode(Object),10
org.jacop.constraints.SumInt.pruneLtEq(long),10
org.jacop.constraints.netflow.Pruning$PercentStrategy.init(),10
org.jacop.constraints.netflow.simplex.Arc.getCompanion(),10
org.jacop.core.IntervalDomain.max(),10
org.jacop.constraints.netflow.NetworkFlow.consistency(Store),10
org.jacop.util.SimpleHashSet.removeFirst(),9
java.util.AbstractQueue.addAll(Collection),9
java.util.PriorityQueue.offer(Object),8
java.util.HashMap$Node.<init>(int, Object, Object, HashMap$Node),8
org.jacop.core.IntVar.singleton(int),8
org.jacop.constraints.SumInt.computeInit(),8
org.jacop.core.IntervalBasedBacktrackableManager.removeLevel(int),7
java.util.LinkedHashMap$LinkedHashIterator.<init>(LinkedHashMap),7
org.jacop.constraints.netflow.Pruning.analyzeArcHelper(Arc, int),7
org.jacop.core.IntervalDomain.in(int, Var, int, int),7
org.jacop.constraints.netflow.Pruning.pruneNodesWithSmallDegree(),7
org.jacop.constraints.netflow.Network.backtrack(),6
org.jacop.core.IntVar.max(),6
org.jacop.core.IntervalDomain.inShift(int, Var, IntDomain, int),6
java.util.ArrayList$Itr.checkForComodification(),6
java.util.PriorityQueue$Itr.next(),6
java.util.ArrayList.fastRemove(Object[], int),6
org.jacop.util.SimpleHashSet.add(Object),6
org.jacop.constraints.Max.consistency(Store),6
org.jacop.constraints.CountBounds.consistency(Store),5
org.jacop.core.IntervalDomain.singleton(),5
org.jacop.search.DepthFirstSearch.label(int),5
java.util.LinkedHashMap$LinkedKeySet.iterator(),5
org.jacop.util.SimpleHashSet$Entry.add(Object),5
org.jacop.core.IntervalDomain.in(int, Var, IntDomain),5
org.jacop.core.BoundDomain.in(int, Var, int, int),5
org.jacop.constraints.XmulYeqZ.consistency(Store),5
org.jacop.core.IntDomain.removeModelConstraint(int, Var, Constraint),5
org.jacop.core.TimeStamp.value(),4
java.util.LinkedHashMap.linkNodeLast(LinkedHashMap$Entry),4
org.jacop.constraints.netflow.simplex.NetworkSimplex.primalStep(Arc),4
org.jacop.core.Store.addChanged(Constraint),4
org.jacop.core.IntervalDomain.inMax(int, Var, int),4
java.util.ArrayList.add(Object, Object[], int),4
org.jacop.core.TimeStamp.stamp(),4
org.jacop.core.TimeStamp.update(Object),4
org.jacop.constraints.netflow.NetworkFlow.queueVariable(int, Var),4
java.util.ArrayList.add(Object),4
org.jacop.constraints.netflow.ArcCompanion.setFlow(int),3
org.jacop.core.IntervalDomain.addDom(IntDomain),3
org.jacop.core.IntVar.remove(int),3
org.jacop.constraints.netflow.ArcCompanion.processEvent(IntVar, MutableNetwork),3
org.jacop.core.IntVar.singleton(),3
org.jacop.core.TimeStamp.removeLevel(int),3
java.util.DualPivotQuicksort.insertionSort(int[], int, int),3
org.jacop.core.SmallDenseDomain.inMax(int, Var, int),3
org.jacop.core.IntervalDomain.inValue(int, IntVar, int),3
org.jacop.constraints.SumInt.propagate(int),3
org.jacop.core.SmallDenseDomain.contains(int),3
org.jacop.core.IntervalDomain.inMin(int, Var, int),3
org.jacop.core.IntervalDomain.unionAdapt(int, int),3
org.jacop.core.BoundDomain.in(int, Var, IntDomain),3
org.jacop.core.TimeStamp.addLast(Object, int),3
org.jacop.util.SimpleHashSet.hash(Object),3
org.jacop.constraints.netflow.simplex.NetworkSimplex.addArc(Arc),3
org.jacop.core.SmallDenseDomain.<init>(int, long),3
org.jacop.constraints.netflow.simplex.NetworkSimplex.addArcWithFlow(Arc),3
org.jacop.constraints.netflow.Network.cost(long),3
org.jacop.constraints.XplusYeqZ.consistency(Store),3
org.jacop.constraints.netflow.simplex.NetworkSimplex.incrementDegree(Node, Arc),3
org.jacop.constraints.ChannelReif.consistency(Store),3
java.util.DualPivotQuicksort.sort(DualPivotQuicksort$Sorter, int[], int, int, int),3
java.util.ArrayList.clear(),3
org.jacop.constraints.netflow.Network.increaseLevel(),3
org.jacop.constraints.SumInt.pruneGtEq(long),3
org.jacop.fz.ParserTokenManager.jjMoveNfa_0(int, int),3
sun.security.util.KnownOIDs.register(KnownOIDs),2
org.jacop.core.SmallDenseDomain.inComplement(int, Var, int),2
java.util.HashMap.removeNode(int, Object, Object, boolean, boolean),2
org.jacop.core.SmallDenseDomain.removeLevel(int, Var),2
org.jacop.constraints.SumInt.pruneMax(IntVar, long),2
org.jacop.core.SmallDenseDomain.min(),2
java.util.Objects.checkIndex(int, int),2
org.jacop.core.IntervalBasedBacktrackableManager.addChanged(int),2
java.lang.Integer.valueOf(int),2
java.util.LinkedHashMap.afterNodeInsertion(boolean),2
java.util.ArrayList.grow(int),2
org.jacop.constraints.Constraint.removeConstraint(),2
org.jacop.util.SparseSet.addMember(int),2
org.jacop.core.IntervalDomain.removeLevel(int, Var),2
org.jacop.constraints.netflow.ArcCompanion.changeMinCapacity(int),2
java.util.PriorityQueue.siftUp(int, Object),2
org.jacop.search.SimpleSelect.placeSearchVariable(int, int),2
java.util.HashSet.clear(),2
java.util.HashMap.get(Object),2
java.util.ArrayList$Itr.hasNext(),2
org.jacop.core.Interval.<init>(int, int),2
java.util.HashSet.add(Object),2
org.jacop.constraints.XeqY.consistency(Store),2
java.util.LinkedHashMap.keySet(),2
java.util.DualPivotQuicksort.mixedInsertionSort(int[], int, int, int),2
java.util.HashMap.hash(Object),2
java.util.Arrays.fill(Object[], Object),2
org.jacop.core.SmallDenseDomain.toIntervalDomain(),2
org.jacop.constraints.netflow.ArcCompanion.restore(MutableNetwork),2
org.jacop.core.BoundDomain.inValue(int, IntVar, int),2
java.util.ArrayList.iterator(),2
java.util.LinkedHashMap.afterNodeRemoval(HashMap$Node),2
org.jacop.constraints.netflow.Pruning$PercentStrategy.close(),2
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa0_0(),2
org.jacop.fz.SimpleCharStream.UpdateLineColumn(char),2
java.lang.Integer.parseInt(String, int),2
java.lang.StringUTF16.getChars(byte[], int, int, char[], int),2
java.util.StringTokenizer.scanToken(int),2
java.lang.ClassLoader.defineClassSourceLocation(ProtectionDomain),2
sun.net.www.ParseUtil.firstEncodeIndex(String),2
java.io.InputStream.<init>(),2
java.util.zip.ZipFile.getZipEntry(String, int),2
java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(boolean, Object),2
java.lang.Object.<init>(),2
java.lang.String.substring(int, int),2
java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$NamedFunction, Object[]),1
org.jacop.fz.constraints.Support$3.consistency(Store),1
org.jacop.search.SimpleSelect.getChoiceValue(),1
java.util.LinkedHashMap$LinkedHashIterator.remove(),1
org.jacop.core.IntVar.domainHasChanged(int),1
org.jacop.constraints.ChannelReif.swap(int, int),1
java.util.ArrayList.remove(int),1
org.jacop.core.SmallDenseDomain.getSize(long),1
org.jacop.constraints.binpacking.Binpacking.queueVariable(int, Var),1
org.jacop.core.IntervalDomain.<init>(int, int),1
java.util.LinkedHashMap.newNode(int, Object, Object, HashMap$Node),1
org.jacop.util.SimpleHashSet.clear(),1
java.util.HashMap.put(Object, Object),1
org.jacop.core.SmallDenseDomain.inValue(int, IntVar, int),1
java.util.HashMap.newNode(int, Object, Object, HashMap$Node),1
org.jacop.core.SmallDenseDomain.noIntervals(),1
java.util.LinkedHashMap.clear(),1
org.jacop.core.BooleanVar.singleton(),1
org.jacop.core.SmallDenseDomain.getInterval(int),1
org.jacop.core.Store.getFirstChanged(),1
java.util.HashMap$Node.getKey(),1
org.jacop.core.IntDomain.divIntBounds(int, int, int, int),1
org.jacop.constraints.netflow.Network.add(Arc),1
java.lang.StrictMath.floor(double),1
java.lang.Math.max(int, int),1
java.lang.StrictMath.ceil(double),1
org.jacop.search.SimpleSelect.getChoiceVariable(int),1
java.util.ArrayList.isEmpty(),1
java.lang.Math.min(int, int),1
org.jacop.util.SimpleHashSet.isEmpty(),1
org.jacop.constraints.CountBounds.swap(int, int),1
org.jacop.core.IntervalBasedBacktrackableManager.computeIntervals(),1
java.util.Collections$UnmodifiableCollection$1.next(),1
java.util.BitSet.cardinality(),1
org.jacop.core.IntervalDomain.singleton(int),1
org.jacop.constraints.binpacking.Binpacking.no_sum(int[], int, int),1
java.util.LinkedHashMap$Entry.<init>(int, Object, Object, HashMap$Node),1
org.jacop.core.IntervalDomain.contains(int),1
java.util.ArrayList$Itr.<init>(ArrayList),1
org.jacop.util.SimpleHashSet$Entry.<init>(SimpleHashSet, Object),1
java.util.PriorityQueue.add(Object),1
org.jacop.constraints.netflow.ArcCompanion.changeCapacity(int, int),1
org.jacop.constraints.binpacking.Binpacking.sum(int[]),1
org.jacop.core.IntervalDomainValueEnumeration.<init>(IntervalDomain),1
java.lang.StringBuffer.append(Object),1
org.jacop.core.Store.recordChange(Var),1
org.jacop.constraints.netflow.NetworkFlow.removeLevelLate(int),1
org.jacop.search.SimpleSolutionListener.executeAfterSolution(Search, SelectChoicePoint),1
org.jacop.search.SimpleSolutionListener.recordSolution(),1
org.jacop.core.IntervalDomain.leftElement(int),1
java.util.BitSet.set(int),1
java.lang.Math.min(double, double),1
java.util.BitSet.expandTo(int),1
org.jacop.core.IntDomain.multiplyInt(int, int),1
org.jacop.fz.DefaultSearchVars.outputVars(),1
org.jacop.search.SimpleSelect.<init>(Var[], ComparatorVariable, Indomain),1
java.lang.invoke.InvokerBytecodeGenerator.clinit(ClassWriter, String, List),1
java.util.stream.StreamOpFlag.combineOpFlags(int, int),1
org.jacop.constraints.Constraint.setScope(Stream),1
jdk.internal.reflect.ReflectionFactory.copyMethod(Method),1
org.jacop.constraints.netflow.Statistics.<init>(),1
java.nio.DirectByteBufferR.slice(),1
sun.util.locale.BaseLocale.getVariant(),1
java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Class),1
java.util.stream.AbstractPipeline.<init>(Spliterator, int, boolean),1
jdk.internal.org.objectweb.asm.Frame.<init>(Label),1
org.jacop.fz.ParserTokenManager.jjStopAtPos(int, int),1
org.jacop.fz.Parser.annotation(),1
org.jacop.fz.Parser.jj_3_9(),1
org.jacop.fz.Parser.flat_expr(),1
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa2_0(long, long),1
org.jacop.fz.Parser.jj_2_9(int),1
java.util.zip.ZipUtils.SH(byte[], int),1
java.nio.HeapCharBuffer.slice(),1
org.jacop.fz.VariablesParameters.generateArrayVariables(SimpleNode, Tables, Store),1
org.jacop.fz.VariablesParameters.getScalarFlatExpr_var(Store, SimpleNode, int),1
org.jacop.fz.Parser.jj_3_3(),1
org.jacop.fz.Parser.jj_2_2(int),1
java.lang.StringLatin1.inflate(byte[], int, char[], int, int),1
org.jacop.fz.SimpleNode.getId(),1
org.jacop.fz.SimpleNode.jjtClose(),1
org.jacop.fz.Parser.jj_save(int, int),1
org.jacop.fz.SimpleCharStream.getBeginLine(),1
org.jacop.fz.Parser.scalar_flat_expr(),1
java.lang.invoke.MethodHandles$Lookup.checkAccess(byte, Class, MemberName),1
java.lang.invoke.LambdaFormEditor$TransformKey.<init>(long),1
jdk.internal.loader.URLClassPath$JarLoader$2.<init>(URLClassPath$JarLoader, String, URL, JarEntry),1
java.lang.String.startsWith(String, int),1
java.lang.String.<init>(byte[], byte),1
java.lang.StringConcatHelper.simpleConcat(Object, Object),1
java.util.jar.Manifest.getAttributes(String),1
java.util.zip.ZipUtils.CH(byte[], int),1
jdk.internal.loader.BuiltinClassLoader.getAndVerifyPackage(String, Manifest, URL),1
java.util.jar.Manifest.getTrustedAttributes(String),1
jdk.internal.loader.URLClassPath$JarLoader$2.getCodeSigners(),1
java.net.URL.isBuiltinStreamHandler(String),1
java.lang.StringLatin1.hashCode(byte[]),1
jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner),1
java.util.zip.ZipFile$CleanableResource.releaseInflater(Inflater),1
java.lang.invoke.DirectMethodHandle.shouldBeInitialized(MemberName),1
sun.invoke.util.BytecodeDescriptor.unparse(Class),1
jdk.internal.jimage.ImageLocation.verify(String, String, ByteBuffer, int, ImageStrings),1
org.dacapo.parser.ConfigFileTokenManager.jjCheckNAddStates(int, int),1
java.lang.System$2.newStringUTF8NoRepl(byte[], int, int),1
java.lang.ClassLoader.getClassLoadingLock(String),1
java.util.zip.ZipUtils.CENCRC(byte[], int),1
jdk.internal.loader.BuiltinClassLoader$2.run(),1
jdk.internal.loader.Resource.getBytes(),1
sun.net.www.protocol.jar.Handler.parseContextSpec(URL, String),1
java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes(),1
java.lang.invoke.ClassSpecializer$SpeciesData.<init>(ClassSpecializer, Object),1
java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(LambdaForm$BasicType, Class, Object),1
jdk.internal.org.objectweb.asm.ClassWriter.toByteArray(),1
java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object),1
java.nio.MappedByteBuffer.limit(int),1
jdk.internal.jimage.ImageLocation.decompress(ByteBuffer, int),1
java.lang.Class.desiredAssertionStatus(),1
java.security.SecureClassLoader$CodeSourceKey.equals(Object),1
java.lang.StringLatin1.toLowerCase(String, byte[], Locale),1
sun.net.www.protocol.jrt.JavaRuntimeURLConnection.toJrtURL(String, String),1
sun.net.www.protocol.jrt.Handler.openConnection(URL),1
java.lang.String.regionMatches(boolean, int, String, int, int),1
org.apache.commons.cli.Parser.parse(Options, String[], Properties, boolean),1
java.util.jar.JarFile.getInputStream(ZipEntry),1
java.util.concurrent.ConcurrentHashMap.putVal(Object, Object, boolean),1
jdk.jfr.internal.EventWriter.putString(String, StringPool),1
