java.util.ArrayList.remove(Object),640
java.util.ArrayList.fastRemove(Object[], int),143
java.lang.Object.equals(Object),133
org.jacop.fz.ParserTokenManager.jjMoveNfa_0(int, int),89
java.lang.String.equals(Object),59
org.jacop.fz.SimpleCharStream.UpdateLineColumn(char),51
org.jacop.fz.Parser.jj_scan_token(int),50
org.jacop.fz.ParserTokenManager.jjStopAtPos(int, int),47
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa0_0(),36
org.jacop.fz.SimpleCharStream.readChar(),31
org.jacop.fz.OutputArrayAnnotation.contains(Var),30
org.jacop.fz.ParserTokenManager.jjCheckNAdd(int),28
org.jacop.util.SimpleHashSet.hash(Object),26
org.jacop.constraints.Reified.queueVariable(int, Var),25
org.jacop.fz.Tables.getConstant(int),25
org.jacop.core.IntVar.max(),24
org.jacop.fz.Parser.jj_consume_token(int),24
org.jacop.core.Store.removeLevel(int),23
org.jacop.core.IntDomain.putModelConstraint(int, Var, Constraint, int),23
org.jacop.constraints.Reified.consistency(Store),19
java.util.ArrayList.add(Object, Object[], int),19
org.jacop.fz.ParserTokenManager.getNextToken(),19
java.util.HashMap$HashIterator.nextNode(),18
java.util.HashMap.getNode(Object),18
org.jacop.fz.Parser.jj_ntk(),18
org.jacop.fz.JJTParserState.closeNodeScope(Node, boolean),18
org.jacop.util.SimpleHashSet.add(Object),17
org.jacop.fz.Parser.jj_2_3(int),16
java.util.HashMap.putVal(int, Object, Object, boolean, boolean),15
org.jacop.core.IntVar.min(),14
org.jacop.core.Store.addChanged(Var, int, int),14
java.util.HashMap.resize(),13
org.jacop.fz.JJTParserState.openNodeScope(Node),13
org.jacop.core.IntDomain.removeModelConstraint(int, Var, Constraint),11
org.jacop.fz.JJTParserState.popNode(),11
java.util.HashMap$Node.<init>(int, Object, Object, HashMap$Node),10
java.lang.StringLatin1.inflate(byte[], int, char[], int, int),10
java.lang.Integer.valueOf(int),10
org.jacop.fz.Parser.annotation(),10
java.lang.PublicMethods$MethodList.filter(Method[], String, Class[], boolean),9
org.jacop.fz.Parser.jj_save(int, int),9
org.jacop.fz.SimpleNode.<init>(int),9
org.jacop.core.Store.consistency(),8
org.jacop.constraints.Constraint.removeConstraint(),8
org.jacop.fz.ParserTokenManager.jjCheckNAddStates(int, int),8
org.jacop.util.SimpleHashSet.removeFirst(),7
org.jacop.core.SmallDenseDomain.isIntersecting(IntDomain),7
java.lang.StringCoding.hasNegatives(byte[], int, int),7
org.jacop.fz.Parser.scalar_flat_expr(),7
org.jacop.fz.Parser.jj_2_9(int),7
org.jacop.fz.SimpleNode.jjtAddChild(Node, int),7
org.jacop.fz.Parser.var_decl_items(),7
org.jacop.fz.ParserTokenManager.jjFillToken(),7
org.jacop.util.SimpleHashSet$Entry.add(Object),6
org.jacop.core.Store.addChanged(Constraint),6
org.jacop.fz.Constraints.generateAllConstraints(SimpleNode),6
org.jacop.fz.Parser.constraint_items(),6
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa2_0(long, long),6
java.lang.StringLatin1.hashCode(byte[]),6
org.jacop.fz.Parser.ann_expr(),6
org.jacop.fz.Parser.flat_expr(),6
org.jacop.constraints.AndBoolVector.consistency(Store),5
org.jacop.constraints.SumBool.entailed(byte),5
java.util.HashMap$KeySpliterator.forEachRemaining(Consumer),5
org.jacop.util.QueueForward.<init>(Collection, Collection),5
org.jacop.fz.Parser.non_array_flat_exprs(),5
java.util.HashMap.hash(Object),5
org.jacop.fz.SimpleCharStream.BeginToken(),5
org.jacop.constraints.ChannelReif.consistency(Store),4
org.jacop.constraints.ChannelReif.<init>(IntVar, Map),4
org.jacop.core.TimeStamp.update(Object),4
org.jacop.core.Store.recordBooleanChange(BooleanVar),4
org.jacop.constraints.Constraint.setScope(Stream),4
java.util.HashMap$HashIterator.<init>(HashMap),4
org.jacop.constraints.Reified.<init>(PrimitiveConstraint, IntVar),4
org.jacop.fz.Constraints.generateConstraint(SimpleNode),4
org.jacop.fz.Tables.removeAliasFromSearch(),4
org.jacop.fz.Parser.jj_3_9(),4
org.jacop.fz.Parser.jj_2_2(int),4
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa3_0(long, long),4
org.jacop.fz.Parser.non_array_flat_expr(),4
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa1_0(long),4
org.jacop.core.BoundDomain.removeLevel(int, Var),3
org.jacop.constraints.XeqY.notSatisfied(),3
org.jacop.core.BoundDomain.inValue(int, IntVar, int),3
org.jacop.fz.Tables.isOutput(Var),3
org.jacop.constraints.Constraint.setScope(Var[]),3
org.jacop.constraints.XorBool.notConsistency(Store),3
java.util.HashMap.removeNode(int, Object, Object, boolean, boolean),3
java.util.stream.AbstractPipeline.copyInto(Sink, Spliterator),3
org.jacop.core.SmallDenseDomain.inComplement(int, Var, int),3
org.jacop.fz.constraints.ComparisonConstraints.int_comparison_reif(int, SimpleNode),3
org.jacop.core.TimeStamp.value(),3
org.jacop.constraints.Count.consistency(Store),3
org.jacop.fz.Parser.jj_3R_19(),3
org.jacop.fz.Constraints.generateAlias(SimpleNode),3
org.jacop.fz.Parser.constraint_item(),3
org.jacop.fz.Parser.array_literal(),3
java.lang.StringUTF16.compress(char[], int, int),3
org.jacop.fz.SimpleCharStream.getBeginColumn(),3
org.jacop.fz.Token.newToken(int, String),3
org.jacop.fz.SimpleCharStream.backup(int),3
org.jacop.fz.JJTParserState.pushNode(Node),3
org.jacop.fz.VariablesParameters.getAnnotations(SimpleNode, int),3
org.jacop.fz.Parser.var_decl_item(),3
java.util.HashMap.containsKey(Object),3
org.jacop.fz.Parser.jj_3R_15(),3
org.jacop.fz.Parser.annotations(),3
java.util.Arrays.fill(Object[], Object),2
org.jacop.core.SmallDenseDomain.inValue(int, IntVar, int),2
org.jacop.constraints.Not.queueVariable(int, Var),2
org.jacop.constraints.XeqY.satisfied(),2
org.jacop.core.SmallDenseDomain.isEmpty(),2
org.jacop.constraints.AndBoolSimple.<init>(IntVar, IntVar, IntVar),2
org.jacop.constraints.Constraint.computeFixpoint(Constraint, Set),2
java.util.Collections$UnmodifiableCollection$1.hasNext(),2
org.jacop.util.SimpleHashSet$Entry.<init>(SimpleHashSet, Object),2
java.util.HashMap.keysToArray(Object[]),2
org.jacop.constraints.DecomposedConstraint.<init>(),2
org.jacop.fz.constraints.LinearConstraints.boolSum(IntVar[]),2
org.jacop.core.Store.imposeDecompositionWithConsistency(DecomposedConstraint),2
java.util.stream.Stream.concat(Stream, Stream),2
java.util.Collections$UnmodifiableCollection.<init>(Collection),2
java.util.stream.AbstractPipeline.spliterator(),2
java.util.HashSet.<init>(Collection),2
org.jacop.constraints.PrimitiveConstraint.impose(Store),2
java.util.HashMap.<init>(),2
org.jacop.constraints.Constraint.setScope(PrimitiveConstraint[]),2
java.util.Spliterators$ArraySpliterator.forEachRemaining(Consumer),2
org.jacop.util.SimpleHashSet.isEmpty(),2
java.util.stream.StreamOpFlag.isKnown(int),2
org.jacop.util.QueueForward.<init>(Constraint, Collection),2
java.util.Objects.requireNonNull(Object),2
org.jacop.fz.constraints.ComparisonConstraints.binaryVar(IntVar),2
java.util.stream.Nodes$FixedNodeBuilder.accept(Object),2
org.jacop.fz.constraints.Support.parseAnnotations(SimpleNode),2
java.util.stream.AbstractPipeline.sourceStageSpliterator(),2
org.jacop.fz.constraints.BoolConstraints.clause_generation(SimpleNode),2
org.jacop.core.Store.getFirstChanged(),2
org.jacop.fz.Parser.jj_2_10(int),2
org.jacop.fz.Tables.getAlias(IntVar),2
org.jacop.fz.Parser.jj_2_1(int),2
org.jacop.fz.Parser.flat_exprs(),2
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa9_0(long, long),2
org.jacop.fz.SimpleNode.jjtSetParent(Node),2
org.jacop.fz.SimpleCharStream.getBeginLine(),2
java.util.ArrayList.grow(int),2
org.jacop.core.Store.putVariable(Var),2
org.jacop.fz.VariablesParameters.generateVariables(SimpleNode, Tables, Store),2
org.jacop.fz.Parser.jj_3_10(),2
java.lang.String.<init>(char[], int, int, Void),2
java.util.HashMap.put(Object, Object),2
org.jacop.fz.Parser.jj_3R_16(),2
java.util.ArrayList.add(Object),2
org.jacop.fz.ASTAnnotation.setId(String),2
org.jacop.fz.ParserTokenManager.jjStopStringLiteralDfa_0(int, long),2
java.util.HashSet.add(Object),2
org.jacop.fz.Parser.bool_ti_expr_tail(),2
org.jacop.fz.Parser.jj_3_1(),2
org.jacop.fz.VariablesParameters.parseAnnExpr(SimpleNode, int),2
java.util.StringTokenizer.skipDelimiters(int),2
sun.net.www.protocol.jar.Handler.parseURL(URL, String, int, int),2
java.util.concurrent.ConcurrentHashMap.transfer(ConcurrentHashMap$Node[], ConcurrentHashMap$Node[]),2
java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(MemberName),2
java.net.URL.<init>(URL, String, URLStreamHandler),2
java.net.URLStreamHandler.toExternalForm(URL),2
org.dacapo.harness.Callback.complete(String, boolean, boolean),1
sun.nio.cs.StreamEncoder.write(char[], int, int),1
java.util.HashMap$HashIterator.hasNext(),1
org.jacop.core.SmallDenseDomain.previousValue(int),1
org.jacop.util.QueueForward.queueForward(int, Var),1
org.jacop.constraints.XlteqY.consistency(Store),1
org.jacop.core.BooleanVar.dom(),1
org.jacop.core.Store.recordChange(Var),1
org.jacop.core.TimeStamp.removeLevel(int),1
java.lang.Integer.<init>(int),1
org.jacop.constraints.Not.consistency(Store),1
org.jacop.util.SimpleHashSet.transfer(SimpleHashSet$Entry[]),1
org.jacop.core.BoundDomain.in(int, Var, int, int),1
java.util.Collections$UnmodifiableCollection$1.next(),1
java.lang.String.indexOf(int, int),1
org.jacop.constraints.OrBoolVector.notConsistency(Store),1
org.jacop.fz.constraints.Support.aliasConstraints(),1
java.util.ArrayList$Itr.next(),1
org.jacop.fz.constraints.LinearConstraints.gen_int_lin_le_reif(SimpleNode),1
org.jacop.constraints.DecomposedConstraint.checkInput(Object[], Predicate, String),1
org.jacop.core.TimeStamp.<init>(Store, Object),1
org.jacop.constraints.Constraint.lambda$impose$5(Var),1
java.util.LinkedHashMap$LinkedHashIterator.nextNode(),1
java.util.stream.SpinedBuffer.accept(Object),1
java.lang.reflect.Method.<init>(Class, String, Class[], Class, Class[], int, int, String, byte[], byte[], byte[]),1
java.util.Arrays.equals(Object[], Object[]),1
org.jacop.constraints.Reified.getConsistencyPruningEvent(Var),1
org.jacop.core.TimeStamp.addLast(Object, int),1
java.util.Collections.unmodifiableSet(Set),1
org.jacop.constraints.PrimitiveConstraint.include(Store),1
java.util.stream.SpinedBuffer.capacity(),1
org.jacop.constraints.AndBoolVector.<init>(IntVar[], IntVar),1
java.util.stream.ReferencePipeline.toArray(IntFunction),1
org.jacop.constraints.AndBool.<init>(IntVar[], IntVar),1
java.util.stream.Streams$ConcatSpliterator.characteristics(),1
org.jacop.fz.ASTScalarFlatExpr.getType(),1
java.util.stream.StreamOpFlag.getMask(int),1
java.util.HashSet.<init>(int, float, boolean),1
java.util.HashMap.newNode(int, Object, Object, HashMap$Node),1
org.jacop.constraints.XeqY.<init>(IntVar, IntVar),1
java.util.stream.AbstractPipeline.evaluateToArrayNode(IntFunction),1
jdk.internal.org.objectweb.asm.ClassWriter.toByteArray(),1
java.lang.Class.descriptorString(),1
java.util.stream.AbstractPipeline.wrapSink(Sink),1
java.util.Arrays$ArrayItr.<init>(Object[]),1
java.util.stream.AbstractPipeline.<init>(AbstractPipeline, int),1
org.jacop.constraints.Constraint.impose(Store),1
java.lang.reflect.Method.copy(),1
java.util.stream.Nodes.flatten(Node, IntFunction),1
java.util.stream.Nodes.builder(long, IntFunction),1
org.jacop.constraints.DecomposedConstraint.checkInputForNullness(String[], Object[][]),1
java.util.Collections$UnmodifiableCollection.iterator(),1
org.jacop.constraints.Constraint.arguments(),1
org.jacop.constraints.Constraint.<init>(),1
java.lang.Math.min(int, int),1
java.util.AbstractCollection.addAll(Collection),1
java.util.stream.ReferencePipeline$7$1.accept(Object),1
java.lang.invoke.DirectMethodHandle.constructorMethod(Object),1
org.jacop.fz.constraints.Support.getVarArray(SimpleNode),1
java.util.Arrays.stream(Object[]),1
org.jacop.fz.ASTConstElem.getName(),1
org.jacop.constraints.SumBool.<init>(Store, IntVar[], String, IntVar),1
org.jacop.constraints.SumBool.filterAndOverflow(IntVar[]),1
java.lang.reflect.Method.invoke(Object, Object[]),1
java.util.stream.Nodes$SpinedNodeBuilder.asArray(IntFunction),1
org.jacop.core.IntervalDomain.<init>(int),1
org.jacop.constraints.AndBoolVector.include(Store),1
org.jacop.core.IntDomain.isIntersecting(IntDomain),1
org.jacop.fz.constraints.ConstraintFncs.int_le_reif(SimpleNode),1
org.jacop.fz.constraints.LinearConstraints.int_lin_relation_reif(int, SimpleNode),1
java.util.stream.Nodes$ArrayNode.asArray(IntFunction),1
org.jacop.constraints.PrimitiveConstraint.lambda$include$7(Store, PrimitiveConstraint),1
org.jacop.core.IntervalDomain.complement(),1
org.jacop.fz.Tables.getIntArray(String),1
org.jacop.constraints.In.satisfied(),1
org.jacop.fz.constraints.Support$1.consistency(Store),1
org.jacop.core.IntVar.domainHasChanged(int),1
java.util.stream.Nodes$ArrayNode.<init>(long, IntFunction),1
org.jacop.fz.constraints.GlobalConstraints.gen_jacop_count(SimpleNode),1
org.jacop.constraints.Constraint.lambda$setScope$1(int),1
jdk.internal.reflect.ReflectionFactory.copyMethod(Method),1
org.jacop.fz.Parser.jj_3R_29(),1
org.jacop.fz.Tables.getVariable(String),1
org.jacop.fz.Parser.constraint_elem(),1
org.jacop.fz.SimpleNode.jjtGetChild(int),1
org.jacop.fz.Parser.jj_3R_30(),1
java.lang.String.startsWith(String),1
java.util.Objects.checkIndex(int, int),1
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa6_0(long, long),1
java.nio.charset.CoderResult.isUnderflow(),1
java.util.ArrayList.remove(int),1
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa5_0(long, long),1
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa4_0(long, long),1
java.lang.String.startsWith(String, int),1
java.lang.StringLatin1.charAt(byte[], int),1
org.jacop.fz.VariablesParameters.getScalarFlatExpr_ArrayVar(Store, SimpleNode, int),1
org.jacop.fz.VariablesParameters.getScalarFlatExpr_var(Store, SimpleNode, int),1
java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$NamedFunction, Object[]),1
java.util.LinkedHashMap.linkNodeLast(LinkedHashMap$Entry),1
org.jacop.fz.SimpleNode.jjtGetNumChildren(),1
java.util.HashSet.contains(Object),1
org.jacop.fz.Tables.addVariable(String, IntVar),1
org.jacop.fz.Parser.non_array_ti_expr_tail(),1
org.jacop.fz.ParserTokenManager.jjStartNfaWithStates_0(int, int, int),1
org.jacop.core.BooleanVar.<init>(Store, String),1
org.jacop.core.BooleanVar.<init>(Store, String, BoundDomain),1
sun.nio.cs.StreamDecoder.read(char[], int, int),1
java.util.ArrayList.<init>(),1
java.nio.Buffer.<init>(int, int, int, int, MemorySegmentProxy),1
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer),1
java.nio.charset.CharsetDecoder.decode(ByteBuffer, CharBuffer, boolean),1
org.jacop.fz.Parser.jj_3_4(),1
org.jacop.core.SmallDenseDomain.getSize(long),1
org.jacop.fz.SimpleCharStream.GetImage(),1
java.lang.CharacterDataLatin1.digit(int, int),1
java.lang.ClassLoader.defineClassSourceLocation(ProtectionDomain),1
org.jacop.fz.VariablesParameters.getType(SimpleNode),1
jdk.internal.loader.BuiltinClassLoader.defineOrCheckPackage(String, Manifest, URL),1
java.lang.StringUTF16.getChars(byte[], int, int, char[], int),1
java.util.StringTokenizer.scanToken(int),1
org.jacop.fz.Parser.<init>(InputStream, String),1
java.net.URL.set(String, String, int, String, String, String, String, String),1
java.util.jar.Attributes.get(Object),1
java.util.Collections$SetFromMap.add(Object),1
java.lang.String.<init>(byte[], byte),1
java.util.zip.ZipFile.getMetaInfVersions(),1
java.lang.ClassLoader.addClass(Class),1
java.util.WeakHashMap.put(Object, Object),1
jdk.internal.loader.BuiltinClassLoader.defineClass(String, Resource),1
java.lang.ClassLoader.postDefineClass(Class, ProtectionDomain),1
java.util.jar.JarFile.checkForSpecialAttributes(),1
java.lang.StringConcatHelper.initialCoder(),1
java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>(ZipFile, ZipFile$ZipFileInputStream, ZipFile$CleanableResource, Inflater, int),1
java.util.jar.JarFile.getJarEntry(String),1
java.util.zip.ZipFile$Source.getEntryPos(String, boolean),1
jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry),1
java.util.zip.Checksum.update(byte[]),1
java.lang.StringConcatHelper.prepend(long, byte[], String),1
java.util.ArrayDeque.addLast(Object),1
java.util.zip.ZipFile.getZipEntry(String, int),1
java.lang.invoke.MethodHandles$Lookup.checkAccess(byte, Class, MemberName),1
java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]),1
java.util.zip.ZipUtils.CENEXT(byte[], int),1
jdk.internal.jimage.BasicImageReader.getLocationIndex(String, String),1
java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm(int, MethodType, int[], boolean, boolean),1
java.time.zone.ZoneOffsetTransition.getOffsetAfter(),1
jdk.nio.zipfs.ZipFileSystem.initCEN(),1
java.util.ImmutableCollections$MapN.get(Object),1
