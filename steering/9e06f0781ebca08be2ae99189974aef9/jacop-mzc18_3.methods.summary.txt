java.util.ArrayList.remove(Object),7450
java.util.ArrayList.fastRemove(Object[], int),2409
java.lang.Object.equals(Object),1097
org.jacop.fz.ParserTokenManager.jjMoveNfa_0(int, int),428
java.lang.String.equals(Object),282
org.jacop.fz.Parser.jj_scan_token(int),161
org.jacop.fz.SimpleCharStream.UpdateLineColumn(char),158
org.jacop.core.IntVar.max(),138
org.jacop.fz.Tables.getConstant(int),128
org.jacop.core.IntDomain.putModelConstraint(int, Var, Constraint, int),128
org.jacop.fz.JJTParserState.openNodeScope(Node),120
org.jacop.util.QueueForward.queueForward(int, Var),109
org.jacop.util.SimpleHashSet.hash(Object),104
org.jacop.util.SimpleHashSet.removeFirst(),104
org.jacop.fz.SimpleCharStream.readChar(),100
org.jacop.fz.Parser.jj_2_2(int),93
java.util.HashMap.getNode(Object),81
org.jacop.util.SimpleHashSet.add(Object),77
org.jacop.fz.ParserTokenManager.jjCheckNAdd(int),67
org.jacop.core.IntVar.min(),65
org.jacop.fz.ParserTokenManager.getNextToken(),63
java.util.HashMap.putVal(int, Object, Object, boolean, boolean),63
org.jacop.fz.Parser.jj_consume_token(int),60
java.util.ArrayList.add(Object, Object[], int),57
java.util.HashMap.resize(),57
org.jacop.core.Store.removeLevel(int),55
java.util.HashMap$HashIterator.nextNode(),50
org.jacop.core.Store.addChanged(Var, int, int),47
org.jacop.fz.Parser.jj_ntk(),45
org.jacop.core.Store.consistency(),43
java.util.HashMap$KeySpliterator.forEachRemaining(Consumer),43
java.util.HashMap$Node.<init>(int, Object, Object, HashMap$Node),42
org.jacop.util.SimpleHashSet$Entry.<init>(SimpleHashSet, Object),41
org.jacop.fz.JJTParserState.closeNodeScope(Node, boolean),40
org.jacop.util.SimpleHashSet$Entry.add(Object),37
java.lang.PublicMethods$MethodList.filter(Method[], String, Class[], boolean),37
org.jacop.fz.JJTParserState.popNode(),37
org.jacop.util.QueueForward.<init>(Collection, Collection),32
org.jacop.core.Store.recordBooleanChange(BooleanVar),31
org.jacop.fz.Parser.jj_2_3(int),29
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa0_0(),26
org.jacop.fz.Parser.jj_save(int, int),25
org.jacop.fz.Parser.jj_3R_15(),22
org.jacop.fz.Parser.jj_2_9(int),21
org.jacop.fz.Constraints.generateAllConstraints(SimpleNode),20
org.jacop.fz.ParserTokenManager.jjStopAtPos(int, int),20
org.jacop.core.IntDomain.removeModelConstraint(int, Var, Constraint),19
org.jacop.fz.constraints.ComparisonConstraints.int_comparison_reif(int, SimpleNode),19
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa1_0(long),18
org.jacop.core.IntervalDomain.isIntersecting(IntDomain),17
java.lang.String.startsWith(String, int),17
java.util.Arrays.fill(Object[], Object),16
org.jacop.fz.Constraints.generateConstraint(SimpleNode),16
java.util.HashMap$HashIterator.<init>(HashMap),15
org.jacop.constraints.Reified.consistency(Store),15
org.jacop.fz.Tables.removeAliasFromSearch(),15
org.jacop.constraints.Constraint.removeConstraint(),14
java.lang.StringLatin1.hashCode(byte[]),14
org.jacop.fz.SimpleCharStream.backup(int),14
org.jacop.fz.SimpleNode.jjtAddChild(Node, int),14
org.jacop.fz.ParserTokenManager.jjCheckNAddStates(int, int),14
org.jacop.fz.Parser.constraint_items(),13
java.lang.Integer.valueOf(int),13
java.util.HashMap.hash(Object),13
org.jacop.fz.Token.newToken(int, String),13
org.jacop.fz.Parser.annotation(),13
org.jacop.constraints.AndBoolVector.consistency(Store),12
org.jacop.fz.constraints.ChannelMap.add(IntVar, int, IntVar),12
org.jacop.fz.Constraints.generateAlias(SimpleNode),12
org.jacop.fz.SimpleCharStream.BeginToken(),12
java.util.ArrayList.grow(int),12
org.jacop.fz.ParserTokenManager.jjFillToken(),12
org.jacop.constraints.SumBool.entailed(byte),11
org.jacop.fz.SimpleCharStream.getBeginLine(),11
java.lang.StringUTF16.compress(char[], int, int),11
org.jacop.fz.SimpleNode.<init>(int),11
org.jacop.fz.Parser.ann_expr(),11
org.jacop.constraints.ChannelReif.consistency(Store),10
java.util.HashMap.keySet(),10
java.util.stream.AbstractPipeline.wrapAndCopyInto(Sink, Spliterator),10
org.jacop.fz.Parser.flat_exprs(),10
org.jacop.fz.Parser.jj_2_1(int),10
org.jacop.fz.VariablesParameters.generateVariables(SimpleNode, Tables, Store),10
java.lang.StringLatin1.inflate(byte[], int, char[], int, int),10
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa2_0(long, long),10
org.jacop.core.IntervalDomain.min(),9
org.jacop.fz.Parser.jj_3R_29(),9
java.lang.String.decodeASCII(byte[], int, char[], int, int),9
org.jacop.fz.SimpleCharStream.GetImage(),9
org.jacop.fz.OutputArrayAnnotation.contains(Var),8
org.jacop.constraints.XorBool.notConsistency(Store),8
java.util.stream.AbstractPipeline.<init>(Spliterator, int, boolean),8
java.lang.reflect.Method.<init>(Class, String, Class[], Class, Class[], int, int, String, byte[], byte[], byte[]),8
org.jacop.core.TimeStamp.value(),8
org.jacop.core.Store.addChanged(Constraint),8
org.jacop.constraints.Count.consistency(Store),8
org.jacop.fz.SimpleNode.jjtSetParent(Node),8
org.jacop.fz.Parser.var_decl_item(),8
org.jacop.fz.Parser.scalar_flat_expr(),8
org.jacop.fz.Parser.var_decl_items(),8
org.jacop.core.TimeStamp.removeLevel(int),7
org.jacop.core.BoundDomain.inValue(int, IntVar, int),7
org.jacop.constraints.Constraint.impose(Store),7
java.util.Objects.requireNonNull(Object),7
org.jacop.constraints.Reified.<init>(PrimitiveConstraint, IntVar),7
java.lang.invoke.DirectMethodHandle.allocateInstance(Object),7
java.util.stream.AbstractPipeline.evaluate(Spliterator, boolean, IntFunction),7
org.jacop.core.BooleanVar.<init>(Store, String, BoundDomain),7
org.jacop.constraints.XeqY.notSatisfied(),6
org.jacop.fz.constraints.Support.aliasConstraints(),6
java.util.HashMap.keysToArray(Object[]),6
org.jacop.constraints.SumBool.filterAndOverflow(IntVar[]),6
java.lang.Iterable.forEach(Consumer),6
org.jacop.constraints.PrimitiveConstraint.impose(Store),6
java.util.ArrayList.add(Object),6
java.util.HashSet.<init>(),6
org.jacop.fz.constraints.ComparisonConstraints.binaryVar(IntVar),5
org.jacop.constraints.Not.<init>(PrimitiveConstraint),5
org.jacop.constraints.Constraint.setScope(Stream),5
java.util.stream.AbstractPipeline.sourceStageSpliterator(),5
org.jacop.fz.constraints.BoolConstraints.clause_generation(SimpleNode),5
org.jacop.fz.Parser.constraint_elem(),5
org.jacop.fz.Parser.array_literal(),5
org.jacop.fz.Parser.non_array_flat_exprs(),5
org.jacop.fz.SimpleCharStream.getBeginColumn(),5
org.jacop.fz.Parser.jj_2_10(int),5
java.lang.String.<init>(char[], int, int, Void),5
org.jacop.fz.VariablesParameters.getAnnotations(SimpleNode, int),5
org.jacop.fz.JJTParserState.pushNode(Node),5
java.util.ArrayList$Itr.next(),4
org.jacop.constraints.XeqY.satisfied(),4
org.jacop.util.SimpleHashSet.transfer(SimpleHashSet$Entry[]),4
org.jacop.constraints.ChannelReif.<init>(IntVar, Map),4
org.jacop.fz.constraints.LinearConstraints.boolSum(IntVar[]),4
org.jacop.constraints.XorBool.<init>(IntVar[], IntVar),4
org.jacop.core.TimeStamp.addLast(Object, int),4
org.jacop.core.TimeStamp.update(Object),4
org.jacop.core.TimeStamp.<init>(Store, Object),4
org.jacop.constraints.AndBoolVector.<init>(IntVar[], IntVar),4
java.util.Collections.unmodifiableSet(Set),4
org.jacop.constraints.Reified.getConsistencyPruningEvent(Var),4
org.jacop.fz.constraints.BoolConstraints.gen_array_bool_and(SimpleNode),4
java.util.Collections$UnmodifiableCollection$1.hasNext(),4
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa5_0(long, long),4
java.util.ArrayList.<init>(),4
org.jacop.fz.ParserTokenManager.jjStartNfaWithStates_0(int, int, int),4
java.nio.charset.CharsetDecoder.decode(ByteBuffer, CharBuffer, boolean),4
org.jacop.constraints.XlteqY.consistency(Store),3
org.jacop.fz.constraints.BoolConstraints.allVarOne(IntVar[]),3
org.jacop.constraints.Constraint.computeFixpoint(Constraint, Set),3
java.util.Collections$UnmodifiableCollection.<init>(Collection),3
java.util.HashSet.<init>(Collection),3
org.jacop.constraints.Constraint.lambda$setScope$1(int),3
java.util.stream.StreamSupport.stream(Spliterator, boolean),3
java.util.stream.Nodes$FixedNodeBuilder.accept(Object),3
java.util.Arrays.asList(Object[]),3
java.util.HashMap$HashIterator.hasNext(),3
java.util.HashMap.removeNode(int, Object, Object, boolean, boolean),3
java.util.stream.SpinedBuffer.copyInto(Object[], int),3
java.util.stream.ReferencePipeline$Head.forEach(Consumer),3
org.jacop.constraints.AndBool.<init>(IntVar[], IntVar),3
org.jacop.fz.Options.useSat(),3
org.jacop.fz.constraints.Support.getVarArray(SimpleNode),3
org.jacop.constraints.XlteqY.<init>(IntVar, IntVar),3
java.util.AbstractCollection.addAll(Collection),3
java.util.stream.Nodes$ArrayNode.<init>(long, IntFunction),3
org.jacop.util.SparseSet.addMember(int),3
org.jacop.core.Store.recordChange(Var),3
org.jacop.fz.Parser.jj_3R_19(),3
org.jacop.fz.SimpleNode.jjtGetChild(int),3
org.jacop.fz.Parser.jj_3R_33(),3
org.jacop.fz.Parser.jj_3_9(),3
org.jacop.fz.Parser.constraint_item(),3
org.jacop.fz.Token.<init>(int, String),3
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa7_0(long, long),3
org.jacop.fz.Parser.non_array_flat_expr(),3
org.jacop.fz.ASTScalarFlatExpr.getIdent(),3
sun.nio.cs.StreamDecoder.implRead(char[], int, int),3
java.lang.StringCoding.hasNegatives(byte[], int, int),3
org.jacop.fz.Parser.ident_anns(),3
org.jacop.fz.Parser.scalar_ti_expr_tail(),3
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa3_0(long, long),3
java.util.ArrayList$Itr.checkForComodification(),2
org.jacop.util.SimpleHashSet.indexFor(int, int),2
org.jacop.core.IntervalDomain.isEmpty(),2
org.jacop.constraints.OrBoolSimple.consistency(Store),2
org.jacop.constraints.XplusClteqZ.satisfied(),2
java.util.DualPivotQuicksort.mixedInsertionSort(int[], int, int, int),2
org.jacop.fz.Tables.isOutput(Var),2
org.jacop.constraints.DecomposedConstraint.checkInputForNullness(String[], Object[][]),2
java.util.stream.Nodes$FixedNodeBuilder.begin(long),2
java.util.stream.Streams$ConcatSpliterator.characteristics(),2
org.jacop.fz.constraints.LinearConstraints.allPositive(int[]),2
java.util.Collections$UnmodifiableCollection$1.next(),2
org.jacop.fz.constraints.Support.pose(Constraint),2
org.jacop.core.BooleanVar.dom(),2
java.lang.ref.SoftReference.get(),2
org.jacop.core.Store.getFirstChanged(),2
org.jacop.constraints.Constraint.setScope(PrimitiveConstraint[]),2
org.jacop.constraints.Constraint.setConstraintScope(PrimitiveConstraint[]),2
org.jacop.util.QueueForward.<init>(Constraint, Collection),2
org.jacop.core.BoundDomain.singleton(),2
java.util.stream.Stream.concat(Stream, Stream),2
java.util.stream.ReferencePipeline$7$1.accept(Object),2
java.util.stream.ReferencePipeline$7.<init>(ReferencePipeline, AbstractPipeline, StreamShape, int, Function),2
java.util.stream.AbstractPipeline.spliterator(),2
java.lang.String.isLatin1(),2
java.util.stream.AbstractPipeline.exactOutputSizeIfKnown(Spliterator),2
org.jacop.fz.Tables.getAlias(IntVar),2
org.jacop.constraints.SumBool.lambda$new$0(IntVar),2
org.jacop.fz.Tables.getVariable(String),2
java.util.Spliterators$ArraySpliterator.forEachRemaining(Consumer),2
org.jacop.constraints.AndBoolVector.include(Store),2
java.util.concurrent.atomic.AtomicInteger.incrementAndGet(),2
org.jacop.fz.constraints.LinearConstraints.int_lin_relation_reif(int, SimpleNode),2
org.jacop.core.IntervalDomain.max(),2
org.jacop.fz.constraints.Support.getAnnVar(ASTAnnExpr),2
org.jacop.constraints.AndBoolSimple.<init>(IntVar, IntVar, IntVar),2
org.jacop.core.IntervalDomain.contains(IntDomain),2
org.jacop.core.IntervalDomain.inComplement(int, Var, int),2
org.jacop.constraints.AndBool.filter(IntVar[]),2
org.jacop.core.IntervalDomain.contains(int),2
org.jacop.core.IntervalDomain.singleton(),2
org.jacop.fz.constraints.Support.unique(IntVar[]),2
org.jacop.constraints.Constraint.setScope(Var[]),2
org.jacop.constraints.Constraint.lambda$impose$5(Var),2
java.util.ArrayList.toArray(Object[]),2
org.jacop.fz.Parser.jj_3R_45(),2
java.nio.ByteBuffer.limit(int),2
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa6_0(long, long),2
java.util.ArrayList.remove(int),2
java.lang.String.hashCode(),2
org.jacop.core.Var.<init>(),2
org.jacop.fz.Parser.bool_ti_expr_tail(),2
java.util.ArrayList.grow(),2
org.jacop.fz.VariablesParameters.getType(SimpleNode),2
org.jacop.fz.Parser.non_array_ti_expr_tail(),2
org.jacop.fz.Parser.flat_expr(),2
org.jacop.fz.SimpleCharStream.FillBuff(),2
java.util.HashSet.add(Object),2
org.jacop.fz.Parser.annotations(),2
org.jacop.fz.SimpleNode.getId(),2
org.jacop.fz.ASTScalarFlatExpr.getType(),2
java.lang.Integer.parseInt(String, int),2
jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction),2
org.jacop.fz.VariablesParameters.parseAnnExpr(SimpleNode, int),2
org.jacop.fz.Parser.jj_3R_17(),2
sun.nio.cs.UTF_8.updatePositions(Buffer, int, Buffer, int),2
org.jacop.fz.SimpleCharStream.getEndColumn(),2
java.util.zip.ZipFile.getInputStream(ZipEntry),2
java.util.Arrays.copyOf(Object[], int, Class),1
jdk.internal.org.objectweb.asm.ClassWriter.toByteArray(),1
java.io.BufferedReader.readLine(boolean, boolean[]),1
sun.security.util.KnownOIDs.register(KnownOIDs),1
java.lang.AbstractStringBuilder.<init>(String),1
org.jacop.constraints.LinearInt.propagate(int),1
org.jacop.core.BoundDomain.inMax(int, Var, int),1
org.jacop.constraints.OrBoolVector.swap(int, int),1
org.jacop.core.IntVar.singleton(int),1
org.jacop.constraints.In.satisfied(),1
org.jacop.fz.constraints.Support$3.consistency(Store),1
java.util.HashSet.iterator(),1
org.jacop.core.SmallDenseDomain.getSize(),1
java.lang.invoke.MethodHandles$Lookup$ClassDefiner.<init>(MethodHandles$Lookup, MethodHandles$Lookup$ClassFile, int),1
org.jacop.search.InputOrderSelect.<init>(Store, Var[], Indomain),1
org.jacop.core.BooleanVar.putModelConstraint(Constraint, int),1
org.jacop.constraints.OrBoolVector.notConsistency(Store),1
java.util.ArrayList$Itr.hasNext(),1
java.util.ArrayList.iterator(),1
java.util.ArrayList.indexOf(Object),1
org.jacop.core.BooleanVar.domainHasChanged(int),1
java.util.stream.Streams$ConcatSpliterator.<init>(Spliterator, Spliterator),1
org.jacop.fz.constraints.Support.fzXneqCReified(IntVar, int, IntVar),1
java.lang.reflect.Method.getReturnType(),1
org.jacop.fz.ASTAnnotation.getAnnId(),1
java.lang.reflect.Method.copy(),1
org.jacop.fz.constraints.BoolConstraints.atLeastOneVarZero(IntVar[]),1
java.util.Arrays$ArrayItr.hasNext(),1
org.jacop.constraints.XeqY.<init>(IntVar, IntVar),1
org.jacop.core.Store.imposeDecompositionWithConsistency(DecomposedConstraint),1
java.util.HashMap$KeySpliterator.characteristics(),1
java.util.HashMap$HashMapSpliterator.getFence(),1
org.jacop.fz.constraints.ConstraintFncs.array_bool_and(SimpleNode),1
org.jacop.constraints.Constraint.getConsistencyPruningEvent(Var),1
java.lang.reflect.Modifier.isPublic(int),1
org.jacop.constraints.Constraint.<init>(),1
org.jacop.core.TimeStamp.ensureCapacity(int),1
java.util.Arrays$ArrayItr.next(),1
java.util.HashMap$KeyIterator.next(),1
jdk.internal.reflect.ReflectionFactory.copyMethod(Method),1
java.util.stream.ReferencePipeline$3$1.accept(Object),1
java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Consumer),1
org.jacop.fz.constraints.LinearConstraints.allConstants(IntVar[]),1
java.util.LinkedHashMap.linkNodeLast(LinkedHashMap$Entry),1
org.jacop.fz.constraints.ComparisonConstraints.generateForEq(IntVar, IntVar, IntVar),1
org.jacop.constraints.Constraint.arguments(),1
java.util.stream.AbstractPipeline.close(),1
org.jacop.constraints.DecomposedConstraint.checkInputForNullness(String, Object[]),1
java.util.Arrays.stream(Object[], int, int),1
java.lang.reflect.Array.newInstance(Class, int),1
java.util.Spliterators.spliterator(Object[], int, int, int),1
java.util.HashMap.get(Object),1
java.util.stream.AbstractSpinedBuffer.count(),1
java.util.Arrays$ArrayList.iterator(),1
org.jacop.constraints.Constraint.lambda$impose$7(Store, Var),1
java.util.stream.Nodes$SpinedNodeBuilder.copyInto(Object[], int),1
java.util.stream.SpinedBuffer.asArray(IntFunction),1
org.jacop.core.Var.createEmptyPositioning(),1
java.util.HashMap.prepareArray(Object[]),1
java.util.stream.ReferencePipeline$7$1.begin(long),1
java.util.stream.ReferencePipeline$3.<init>(ReferencePipeline, AbstractPipeline, StreamShape, int, Function),1
java.util.Collections$UnmodifiableCollection$1.<init>(Collections$UnmodifiableCollection),1
java.util.stream.ReferencePipeline.map(Function),1
org.jacop.core.Store.imposeWithConsistency(Constraint),1
java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass(),1
java.util.stream.ReferencePipeline.toArray(IntFunction),1
java.util.Spliterator.getExactSizeIfKnown(),1
java.lang.reflect.AccessibleObject.slowVerifyAccess(Class, Class, Class, int),1
org.jacop.constraints.SumBool.<init>(IntVar[], String, IntVar),1
java.util.Optional.ofNullable(Object),1
org.jacop.constraints.SumBool.<init>(Store, IntVar[], String, IntVar),1
java.util.stream.AbstractPipeline.evaluateToArrayNode(IntFunction),1
org.jacop.fz.constraints.ComparisonConstraints.gen_int_eq_reif(SimpleNode),1
org.jacop.fz.Tables.getVariableArray(String),1
org.jacop.core.BoundDomain.in(int, Var, int, int),1
org.jacop.core.IntervalDomain.intervalNo(int),1
org.jacop.fz.constraints.BoolConstraints.atLeastOneVarOne(IntVar[]),1
java.util.HashSet.toArray(Object[]),1
java.lang.Class.getMethodsRecursive(String, Class[], boolean),1
jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Object, Object[]),1
java.util.stream.Streams.composedClose(BaseStream, BaseStream),1
org.jacop.constraints.XgteqC.<init>(IntVar, int),1
org.jacop.constraints.PrimitiveConstraint.lambda$include$7(Store, PrimitiveConstraint),1
org.jacop.constraints.XplusClteqZ.<init>(IntVar, int, IntVar),1
org.jacop.util.SimpleHashSet.isEmpty(),1
org.jacop.core.Interval.<init>(int, int),1
org.jacop.constraints.Reified.impose(Store),1
java.util.Collections$UnmodifiableCollection.stream(),1
org.jacop.fz.constraints.ConstraintFncs.set_in_reif(SimpleNode),1
org.jacop.fz.constraints.SetConstraints.gen_set_in_reif(SimpleNode),1
org.jacop.constraints.DecomposedConstraint.<init>(),1
jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry),1
jdk.internal.reflect.ReflectionFactory.newMethodAccessor(Method),1
java.util.stream.SpinedBuffer.clear(),1
org.jacop.constraints.PrimitiveConstraint.include(Store),1
java.lang.reflect.Method.invoke(Object, Object[]),1
java.util.LinkedHashMap$LinkedKeySet.iterator(),1
org.jacop.constraints.XlteqY.impose(Store),1
java.util.LinkedHashMap.<init>(int, float),1
jdk.internal.reflect.ByteVectorImpl.add(byte),1
java.util.HashMap$EntryIterator.next(),1
java.io.InputStreamReader.read(char[], int, int),1
org.jacop.fz.Parser.jj_3R_30(),1
org.jacop.fz.Parser.jj_3R_18(),1
org.jacop.fz.Parser.jj_3R_34(),1
java.nio.Buffer.position(int),1
org.jacop.fz.Parser.jj_3_2(),1
java.lang.String.checkBoundsOffCount(int, int, int),1
java.nio.Buffer.discardMark(),1
java.util.Objects.checkIndex(int, int),1
org.jacop.fz.SimpleCharStream.getEndLine(),1
org.jacop.fz.Tables.addAlias(IntVar, IntVar),1
org.jacop.core.BooleanVar.singleton(),1
java.lang.String.coder(),1
org.jacop.fz.Parser.jj_3R_21(),1
org.jacop.fz.Parser.set_literal(),1
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa4_0(long, long),1
java.nio.Buffer.flip(),1
java.nio.CharBuffer.<init>(int, int, int, int, char[], int, MemorySegmentProxy),1
org.jacop.fz.ParserTokenManager.jjMoveStringLiteralDfa8_0(long, long),1
java.lang.String.length(),1
org.jacop.fz.VariablesParameters.getScalarFlatExpr_var(Store, SimpleNode, int),1
org.jacop.fz.VariablesParameters.generateArrayVariables(SimpleNode, Tables, Store),1
org.jacop.fz.VariablesParameters.getScalarFlatExpr_ArrayVar(Store, SimpleNode, int),1
org.jacop.core.Var.id(),1
org.jacop.fz.SimpleNode.jjtGetNumChildren(),1
java.nio.CharBuffer.hasArray(),1
java.nio.CharBuffer.limit(int),1
java.util.HashMap.newNode(int, Object, Object, HashMap$Node),1
java.util.HashMap.<init>(),1
java.nio.CharBuffer.arrayOffset(),1
org.jacop.fz.Parser.jj_3R_20(),1
org.jacop.fz.Parser.jj_3_4(),1
java.lang.String.rangeCheck(char[], int, int),1
java.lang.CharacterDataLatin1.digit(int, int),1
org.jacop.core.BoundDomain.<init>(int, int),1
org.jacop.fz.ParserTokenManager.jjStopStringLiteralDfa_0(int, long),1
java.util.HashSet.contains(Object),1
org.jacop.fz.Parser.jj_3_3(),1
org.jacop.fz.Parser.jj_3_10(),1
java.lang.Integer.<init>(int),1
org.jacop.fz.Parser.jj_3R_16(),1
org.jacop.core.SmallDenseDomain.<init>(int, int),1
sun.nio.cs.UTF_8$Decoder.xflow(Buffer, int, int, Buffer, int, int),1
java.lang.String.getBytes(byte[], int, byte),1
java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegmentProxy),1
org.jacop.core.IntVar.commonInitialization(Store, String, IntDomain),1
org.jacop.fz.ASTIntTiExprTail.setLowHigh(int, int),1
java.lang.invoke.MethodHandles$Lookup.defineHiddenClass(byte[], boolean, MethodHandles$Lookup$ClassOption[]),1
java.util.StringTokenizer.scanToken(int),1
java.lang.ClassLoader.loadClass(String),1
org.jacop.fz.Parser.<init>(InputStream, String),1
java.net.URL.<init>(URL, String, URLStreamHandler),1
java.lang.String.newStringUTF8NoRepl(byte[], int, int),1
java.lang.String.indexOf(byte[], byte, int, String, int),1
java.util.zip.ZipEntry.<init>(String),1
java.util.WeakHashMap.put(Object, Object),1
jdk.internal.loader.URLClassPath.getResource(String, boolean),1
java.util.concurrent.ConcurrentHashMap.putVal(Object, Object, boolean),1
java.lang.String.indexOf(String),1
java.security.SecureClassLoader$CodeSourceKey.equals(Object),1
java.lang.ClassLoader.definePackage(String, String, String, String, String, String, String, URL),1
java.lang.invoke.BoundMethodHandle.editor(),1
org.dacapo.parser.Config.preprocessArgs(String, File, File),1
java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name),1
org.dacapo.parser.ConfigFileTokenManager.jjMoveNfa_0(int, int),1
org.dacapo.harness.Data.getLocation(),1
java.security.CodeSource.<init>(URL, CodeSigner[]),1
jdk.nio.zipfs.ZipFileSystem.initCEN(),1
sun.nio.fs.UnixChannelFactory$Flags.toFlags(Set),1
java.lang.Object.<init>(),1
java.lang.ClassLoader.checkCerts(String, CodeSource),1
java.util.ServiceLoader$LazyClassPathLookupIterator.parse(URL),1
java.nio.DirectByteBuffer.ix(int),1
java.lang.String.lastIndexOf(int, int),1
java.util.jar.Attributes.getValue(Attributes$Name),1
java.util.zip.ZipFile$Source.getEntryPos(String, boolean),1
java.lang.invoke.MemberName.getDeclaringClass(),1
